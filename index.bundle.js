(()=>{"use strict";const e=[{type:"textarea",key:"nodes",label:"Node Data",input:!0},{key:"placeholder",ignore:!0}];function t(...t){return Formio.Components.baseEditForm([{key:"data",ignore:!0},{key:"display",components:e},{key:"validation",ignore:!0}],...t)}const i=Formio.Components.components.field;class n extends i{static testData=[{name:"Item 1",details:{id:1,description:"This is item 1"},children:[{name:"Subitem 1.1",details:{id:2,description:"This is subitem 1.1"},children:[]},{name:"Subitem 1.2",details:{id:3,description:"This is subitem 1.2"},children:[{name:"Subitem 1.2.1",details:{id:4,description:"This is subitem 1.2.1"},children:[]}]}]},{name:"Item 2",details:{id:5,description:"This is item 2"},children:[]}];static editForm=t;static schema(...e){return i.schema({type:"treeview",label:"Treeview",key:"treeview",nodes:JSON.stringify(n.testData)})}static get builderInfo(){return{title:"Treeview",icon:"tree",group:"basic",documentation:"/userguide/#textfield",weight:0,schema:n.schema()}}constructor(e,t,i){super(e,t,i)}setJSON(e){this.component.nodes=e,this.updateValue(null),super.redraw()}init(){super.init()}get inputInfo(){return super.inputInfo}render(e){return super.render('<div ref="treeview">\n                <style>\n                ul.formio-treeview {\n                    list-style-type: none;\n                }\n\n                ul.formio-treeview ul.formio-treeview {\n                    margin-left: 20px;\n                }\n\n                .formio-treeview-toggle {\n                    cursor: pointer;\n                }\n\n                .formio-treeview-hidden {\n                    display: none;\n                }\n\n                .formio-treeview-selected {\n                    background-color: #d3d3d3;\n                }\n            </style>\n        </div>')}attach(e){let t=this;if(this.loadRefs(e,{treeview:"single"}),console.log("Rendering: "+this.component.nodes),!this.component.disabled&&""!==this.component.nodes)try{!function e(i,n){const r=document.createElement("ul");return r.classList.add("formio-treeview"),i.forEach((i=>{const n=document.createElement("li"),s=document.createElement("span");if(s.textContent=i.name,s.classList.add("formio-treeview-toggle"),s.dataset.details=JSON.stringify(i.details),n.appendChild(s),i.children&&i.children.length>0){const t=e(i.children,n);t.classList.add("formio-treeview-hidden"),n.appendChild(t),s.addEventListener("click",(()=>{t.classList.toggle("formio-treeview-hidden")}))}s.addEventListener("click",(e=>{e.stopPropagation(),document.querySelectorAll(".formio-treeview-selected").forEach((e=>e.classList.remove("formio-treeview-selected"))),s.classList.add("formio-treeview-selected"),t.updateValue(JSON.parse(s.dataset.details))})),r.appendChild(n)})),n.appendChild(r),r}(JSON.parse(this.component.nodes),this.refs.treeview)}catch(e){console.log("invalid treeview JSON")}return super.attach(e)}detach(){return super.detach()}destroy(){return super.destroy()}normalizeValue(e,t={}){return super.normalizeValue(e,t)}getValue(){return super.getValue()}getValueAt(e){return super.getValueAt(e)}setValue(e,t={}){return super.setValue(e,t)}setValueAt(e,t,i={}){return super.setValueAt(e,t,i)}updateValue(e,t={}){return super.updateValue(...arguments)}}Formio.use([{components:{treeview:n}}])})();